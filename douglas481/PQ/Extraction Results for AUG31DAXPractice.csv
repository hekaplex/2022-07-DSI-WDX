M Query,AverageDwellTimeandGrossTonnage,"let     Source = Csv.Document(File.Contents(""C:\Users\DivergenceDSI\OneDrive - DIVERGENCE ONE\Desktop\Capstone Group 1\Altered Data\AverageDwellTimeandGrossTonnage.csv""),[Delimiter="","", Columns=3, Encoding=1252, QuoteStyle=QuoteStyle.None]),     #""Promoted Headers"" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),     #""Changed Type"" = Table.TransformColumnTypes(#""Promoted Headers"",{{""PortName"", type text}, {""AverageDwellTime"", Int64.Type}, {""Gross_Tonnage"", Int64.Type}}),     #""Renamed Columns"" = Table.RenameColumns(#""Changed Type"",{{""PortName"", ""Port Name""}, {""AverageDwellTime"", ""Average Dwell Time (days)""}, {""Gross_Tonnage"", ""Gross Tonnage""}}) in     #""Renamed Columns"""
DAX Measure,Calls,"Number of Calls in Time Period Measure = CALCULATE(COUNT(Calls[Call ID]),DATESBETWEEN(Calls[Arrival Date],MIN(Calls[Arrival Date]),MAX(Calls[Arrival Date])))"
DAX Measure,Calls,"Total US Tonnage Measure = CALCULATE(SUM(Ships[Deadweight Tonnage]), Calls[Country Name]=""United States of America"")"
M Query,Calls,"let     Source = Csv.Document(File.Contents(""C:\Users\DivergenceDSI\OneDrive - DIVERGENCE ONE\Desktop\Capstone Group 1\Raw Data\Calls.csv""),[Delimiter="","", Columns=10, Encoding=1252, QuoteStyle=QuoteStyle.None]),     #""Promoted Headers"" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),     #""Changed Type"" = Table.TransformColumnTypes(#""Promoted Headers"",{{""[callid]"", Int64.Type}, {""[lrno]"", Int64.Type}, {""[arrdate]"", type datetime}, {""[saildate]"", type date}, {""[portname]"", type text}, {""[countryname]"", type text}, {""[priorportname]"", type text}, {""[priorcountryname]"", type text}, {""[movetype]"", type text}, {""[datecreated]"", type datetime}}),     #""Filtered Rows"" = Table.SelectRows(#""Changed Type"", each true),     #""Split Column by Delimiter"" = Table.SplitColumn(Table.TransformColumnTypes(#""Filtered Rows"", {{""[arrdate]"", type text}}, ""en-US""), ""[arrdate]"", Splitter.SplitTextByEachDelimiter({"" ""}, QuoteStyle.Csv, false), {""[arrdate].1"", ""[arrdate].2""}),     #""Changed Type1"" = Table.TransformColumnTypes(#""Split Column by Delimiter"",{{""[arrdate].1"", type date}, {""[arrdate].2"", type time}}),     #""Renamed Columns"" = Table.RenameColumns(#""Changed Type1"",{{""[arrdate].1"", ""Arrival Date""}, {""[arrdate].2"", ""Arrival Time""}, {""[callid]"", ""Call ID""}, {""[lrno]"", ""LR No.""}, {""[saildate]"", ""Sail Date""}, {""[portname]"", ""Port Name""}, {""[countryname]"", ""Country Name""}, {""[priorportname]"", ""Prior Port Name""}, {""[priorcountryname]"", ""Prior Country Name""}, {""[movetype]"", ""Move Type""}, {""[datecreated]"", ""Date Created""}}),     #""Removed Columns"" = Table.RemoveColumns(#""Renamed Columns"",{""Date Created""}),     #""Inserted Literal"" = Table.AddColumn(#""Removed Columns"", ""Sail Time"", each ""23:59:59"", type text),     #""Changed Type2"" = Table.TransformColumnTypes(#""Inserted Literal"",{{""Sail Time"", type time}}),     #""Reordered Columns"" = Table.ReorderColumns(#""Changed Type2"",{""Call ID"", ""LR No."", ""Arrival Date"", ""Arrival Time"", ""Sail Date"", ""Sail Time"", ""Port Name"", ""Country Name"", ""Prior Port Name"", ""Prior Country Name"", ""Move Type""}),     #""Inserted Merged Column"" = Table.AddColumn(#""Reordered Columns"", ""Arrival Date/Time"", each Text.Combine({Text.From([Arrival Time], ""en-US""), Text.From([Arrival Date], ""en-US"")}, """"), type text),     #""Changed Type3"" = Table.TransformColumnTypes(#""Inserted Merged Column"",{{""Arrival Date/Time"", type datetime}}),     #""Reordered Columns1"" = Table.ReorderColumns(#""Changed Type3"",{""Call ID"", ""LR No."", ""Arrival Date"", ""Arrival Time"", ""Arrival Date/Time"", ""Sail Date"", ""Sail Time"", ""Port Name"", ""Country Name"", ""Prior Port Name"", ""Prior Country Name"", ""Move Type""}),     #""Inserted Merged Column1"" = Table.AddColumn(#""Reordered Columns1"", ""Sail Date/Time"", each Text.Combine({Text.From([Sail Date], ""en-US""), Text.From([Sail Time], ""en-US"")}, """"), type text),     #""Reordered Columns2"" = Table.ReorderColumns(#""Inserted Merged Column1"",{""Call ID"", ""LR No."", ""Arrival Date"", ""Arrival Time"", ""Arrival Date/Time"", ""Sail Date"", ""Sail Time"", ""Sail Date/Time"", ""Port Name"", ""Country Name"", ""Prior Port Name"", ""Prior Country Name"", ""Move Type""}),     #""Changed Type4"" = Table.TransformColumnTypes(#""Reordered Columns2"",{{""Sail Date/Time"", type datetime}}),     #""Removed Columns1"" = Table.RemoveColumns(#""Changed Type4"",{""Sail Date/Time""}),     #""Inserted Merged Column2"" = Table.AddColumn(#""Removed Columns1"", ""Sail Date/Time"", each Text.Combine({Text.From([Sail Time], ""en-US""), Text.From([Sail Date], ""en-US"")}, "" ""), type text),     #""Changed Type5"" = Table.TransformColumnTypes(#""Inserted Merged Column2"",{{""Sail Date/Time"", type datetime}}),     #""Reordered Columns3"" = Table.ReorderColumns(#""Changed Type5"",{""Call ID"", ""LR No."", ""Arrival Date"", ""Arrival Time"", ""Arrival Date/Time"", ""Sail Date"", ""Sail Time"", ""Sail Date/Time"", ""Port Name"", ""Country Name"", ""Prior Port Name"", ""Prior Country Name"", ""Move Type""}),     #""Added Custom"" = Table.AddColumn(#""Reordered Columns3"", ""Dwell Time"", each [#""Sail Date/Time""]-[#""Arrival Date/Time""]),     #""Changed Type6"" = Table.TransformColumnTypes(#""Added Custom"",{{""Dwell Time"", type duration}}),     #""Reordered Columns4"" = Table.ReorderColumns(#""Changed Type6"",{""Call ID"", ""LR No."", ""Arrival Date"", ""Arrival Time"", ""Arrival Date/Time"", ""Sail Date"", ""Sail Time"", ""Sail Date/Time"", ""Dwell Time"", ""Port Name"", ""Country Name"", ""Prior Port Name"", ""Prior Country Name"", ""Move Type""}),     #""Renamed Columns1"" = Table.RenameColumns(#""Reordered Columns4"",{{""Dwell Time"", ""Time In Port""}}),     #""Renamed Columns2"" = Table.RenameColumns(#""Renamed Columns1"",{{""Time In Port"", ""Time In Port/Transit""}}),     #""Added Custom1"" = Table.AddColumn(#""Renamed Columns2"", ""Dwell Time (days)"", each [Sail Date]-[Arrival Date]),     #""Changed Type7"" = Table.TransformColumnTypes(#""Added Custom1"",{{""Dwell Time (days)"", type duration}}),     #""Reordered Columns5"" = Table.ReorderColumns(#""Changed Type7"",{""Call ID"", ""LR No."", ""Arrival Date"", ""Arrival Time"", ""Arrival Date/Time"", ""Sail Date"", ""Sail Time"", ""Sail Date/Time"", ""Time In Port/Transit"", ""Dwell Time (days)"", ""Port Name"", ""Country Name"", ""Prior Port Name"", ""Prior Country Name"", ""Move Type""}),     #""Renamed Columns3"" = Table.RenameColumns(#""Reordered Columns5"",{{""Dwell Time (days)"", ""Total Dwell Time (days)""}}) in     #""Renamed Columns3"""
Calls,DAX Column,"Number of Ports Column = SUMX(RELATEDTABLE('Ships Tonnage Counts'),COUNT('Ships Tonnage Counts'[portname]))"
Calls,DAX Column,"Total US Tonnage Column = SUMX(FILTER(Calls, Calls[Country Name]=""United States of America""), RELATED(Ships[Deadweight Tonnage]))"
M Query,Dwell Time vs Gross Tonnage,"let     Source = Csv.Document(File.Contents(""C:\Users\DivergenceDSI\OneDrive - DIVERGENCE ONE\Desktop\Capstone Group 1\Altered Data\Dwell Time vs Gross Tonnage.csv""),[Delimiter="","", Columns=3, Encoding=65001, QuoteStyle=QuoteStyle.None]),     #""Promoted Headers"" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),     #""Changed Type"" = Table.TransformColumnTypes(#""Promoted Headers"",{{""portname"", type text}, {""Gross Tonnage"", Int64.Type}, {""Dwell Time (days)"", Int64.Type}}),     #""Renamed Columns"" = Table.RenameColumns(#""Changed Type"",{{""portname"", ""Port Name""}}) in     #""Renamed Columns"""
M Query,Port_CallID_Tonnage,"let     Source = Csv.Document(File.Contents(""C:\Users\DivergenceDSI\OneDrive - DIVERGENCE ONE\Desktop\Capstone Group 1\Altered Data\Port_CallID_Tonnage.csv""),[Delimiter="","", Columns=3, Encoding=1252, QuoteStyle=QuoteStyle.None]),     #""Promoted Headers"" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),     #""Changed Type"" = Table.TransformColumnTypes(#""Promoted Headers"",{{""callid"", Int64.Type}, {""Shipping Tonnage"", Int64.Type}, {""portname"", type text}}) in     #""Changed Type"""
M Query,Ships,"let     Source = Csv.Document(File.Contents(""C:\Users\DivergenceDSI\OneDrive - DIVERGENCE ONE\Desktop\Capstone Group 1\Raw Data\Ships.csv""),[Delimiter="","", Columns=11, Encoding=1252, QuoteStyle=QuoteStyle.None]),     #""Promoted Headers"" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),     #""Changed Type"" = Table.TransformColumnTypes(#""Promoted Headers"",{{""[lrno]"", Int64.Type}, {""[vesselname]"", type text}, {""[owner]"", type text}, {""[shipmanager]"", type text}, {""[operator]"", type text}, {""[flag]"", type text}, {""[dwt]"", Int64.Type}, {""[loa]"", type number}, {""[breadth]"", type number}, {""[depth]"", type number}, {""[statdecode]"", type text}}),     #""Renamed Columns"" = Table.RenameColumns(#""Changed Type"",{{""[lrno]"", ""LR No.""}, {""[vesselname]"", ""Vessel Name""}, {""[owner]"", ""Owner""}, {""[shipmanager]"", ""Ship Manager""}, {""[operator]"", ""Operator""}, {""[flag]"", ""Flag""}, {""[dwt]"", ""Deadweight Tonnage""}, {""[loa]"", ""Length Overall""}, {""[breadth]"", ""Breadth""}, {""[depth]"", ""Depth""}, {""[statdecode]"", ""Statdecode""}}),     #""Removed Columns"" = Table.RemoveColumns(#""Renamed Columns"",{""Statdecode""}),     #""Filtered Rows"" = Table.SelectRows(#""Removed Columns"", each true) in     #""Filtered Rows"""
M Query,Ships Tonnage Counts,"let     Source = Csv.Document(File.Contents(""C:\Users\DivergenceDSI\OneDrive - DIVERGENCE ONE\Desktop\Capstone Group 1\Altered Data\Ships Tonnage Counts.csv""),[Delimiter="","", Columns=3, Encoding=1252, QuoteStyle=QuoteStyle.None]),     #""Promoted Headers"" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),     #""Changed Type"" = Table.TransformColumnTypes(#""Promoted Headers"",{{""portname"", type text}, {""Gross Tonnage"", Int64.Type}, {""Ship Count"", Int64.Type}}),     #""Sorted Rows"" = Table.Sort(#""Changed Type"",{{""Gross Tonnage"", Order.Descending}}) in     #""Sorted Rows"""
M Query,TableCreation,"let     Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(""i45WMlTSUXJUitWJVjICspzALGMgy1kpNhYA"", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t, Column2 = _t]),     #""Changed Type"" = Table.TransformColumnTypes(Source,{{""Column1"", Int64.Type}, {""Column2"", type text}}) in     #""Changed Type"""
